{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwestermeyer/Library/Mobile Documents/com~apple~CloudDocs/Dev/Formation/TP/React/movie-app/src/components/Card.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  movie\n}) => {\n  const dateFormater = date => {\n    let [yy, mm, dd] = date.split(\"-\");\n    return [dd, mm, yy].join(\"/\");\n  };\n  const genreFinder = () => {\n    let genreArray = [];\n    for (let i = 0; i < movie.genre_ids.length; i++) {\n      switch (movie.genre_ids[i]) {\n        case 28:\n          genreArray.push(`Action`);\n          break;\n        case 12:\n          genreArray.push(`Aventure`);\n          break;\n        case 16:\n          genreArray.push(`Animation`);\n          break;\n        case 35:\n          genreArray.push(`Comédie`);\n          break;\n        case 80:\n          genreArray.push(`Policier`);\n          break;\n        case 99:\n          genreArray.push(`Documentaire`);\n          break;\n        case 18:\n          genreArray.push(`Drame`);\n          break;\n        case 10751:\n          genreArray.push(`Famille`);\n          break;\n        case 14:\n          genreArray.push(`Fantasy`);\n          break;\n        case 36:\n          genreArray.push(`Histoire`);\n          break;\n        case 27:\n          genreArray.push(`Horreur`);\n          break;\n        case 10402:\n          genreArray.push(`Musique`);\n          break;\n        case 9648:\n          genreArray.push(`Mystère`);\n          break;\n        case 10749:\n          genreArray.push(`Romance`);\n          break;\n        case 878:\n          genreArray.push(`Science-fiction`);\n          break;\n        case 10770:\n          genreArray.push(`Téléfilm`);\n          break;\n        case 53:\n          genreArray.push(`Thriller`);\n          break;\n        case 10752:\n          genreArray.push(`Guerre`);\n          break;\n        case 37:\n          genreArray.push(`Western`);\n          break;\n        default:\n          break;\n      }\n    }\n    return genreArray.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: genre\n    }, genre, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }, this));\n  };\n  const addStorage = () => {\n    let storedData = window.localStorage.movies ? window.localStorage.movies.split(\",\") : [];\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n  const deleteStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter(id => id != movie.id);\n    window.localStorage.movies = newData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster_path ? \"https://image.tmdb.org/t/p/original/\" + movie.poster_path : \"./img/poster.jpg\",\n      alt: `affiche ${movie.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), movie.release_date ? /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Sorti le : \", dateFormater(movie.release_date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [movie.vote_average.toFixed(1), \"/10 \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2B50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movie.genre_ids ? genreFinder() : movie.genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: genre.name\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), movie.overview ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Synopsis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), movie.genre_ids ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      onClick: () => addStorage(),\n      children: \"Ajouter aux coups de coeur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      onClick: () => {\n        deleteStorage();\n        window.location.reload();\n      },\n      children: \"Supprimer de la liste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","movie","dateFormater","date","yy","mm","dd","split","join","genreFinder","genreArray","i","genre_ids","length","push","map","genre","children","fileName","_jsxFileName","lineNumber","columnNumber","addStorage","storedData","window","localStorage","movies","includes","id","toString","deleteStorage","newData","filter","className","src","poster_path","alt","title","release_date","vote_average","toFixed","genres","name","overview","onClick","location","reload","_c","$RefreshReg$"],"sources":["/Users/valentinwestermeyer/Library/Mobile Documents/com~apple~CloudDocs/Dev/Formation/TP/React/movie-app/src/components/Card.js"],"sourcesContent":["import React from \"react\";\n\nconst Card = ({ movie }) => {\n  const dateFormater = (date) => {\n    let [yy, mm, dd] = date.split(\"-\");\n    return [dd, mm, yy].join(\"/\");\n  };\n\n  const genreFinder = () => {\n    let genreArray = [];\n    for (let i = 0; i < movie.genre_ids.length; i++) {\n      switch (movie.genre_ids[i]) {\n        case 28:\n          genreArray.push(`Action`);\n          break;\n        case 12:\n          genreArray.push(`Aventure`);\n          break;\n        case 16:\n          genreArray.push(`Animation`);\n          break;\n        case 35:\n          genreArray.push(`Comédie`);\n          break;\n        case 80:\n          genreArray.push(`Policier`);\n          break;\n        case 99:\n          genreArray.push(`Documentaire`);\n          break;\n        case 18:\n          genreArray.push(`Drame`);\n          break;\n        case 10751:\n          genreArray.push(`Famille`);\n          break;\n        case 14:\n          genreArray.push(`Fantasy`);\n          break;\n        case 36:\n          genreArray.push(`Histoire`);\n          break;\n        case 27:\n          genreArray.push(`Horreur`);\n          break;\n        case 10402:\n          genreArray.push(`Musique`);\n          break;\n        case 9648:\n          genreArray.push(`Mystère`);\n          break;\n        case 10749:\n          genreArray.push(`Romance`);\n          break;\n        case 878:\n          genreArray.push(`Science-fiction`);\n          break;\n        case 10770:\n          genreArray.push(`Téléfilm`);\n          break;\n        case 53:\n          genreArray.push(`Thriller`);\n          break;\n        case 10752:\n          genreArray.push(`Guerre`);\n          break;\n        case 37:\n          genreArray.push(`Western`);\n          break;\n        default:\n          break;\n      }\n    }\n    return genreArray.map((genre) => <li key={genre}>{genre}</li>);\n  };\n\n  const addStorage = () => {\n    let storedData = window.localStorage.movies\n      ? window.localStorage.movies.split(\",\")\n      : [];\n\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n\n  const deleteStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter((id) => id != movie.id);\n\n    window.localStorage.movies = newData;\n  };\n\n  return (\n    <div className=\"card\">\n      <img\n        src={\n          movie.poster_path\n            ? \"https://image.tmdb.org/t/p/original/\" + movie.poster_path\n            : \"./img/poster.jpg\"\n        }\n        alt={`affiche ${movie.title}`}\n      />\n      <h2>{movie.title}</h2>\n      {movie.release_date ? (\n        <h5>Sorti le : {dateFormater(movie.release_date)}</h5>\n      ) : null}\n      <h4>\n        {movie.vote_average.toFixed(1)}/10 <span>⭐</span>\n      </h4>\n\n      <ul>\n        {movie.genre_ids\n          ? genreFinder()\n          : movie.genres.map((genre) => <li key={genre}>{genre.name}</li>)}\n      </ul>\n\n      {movie.overview ? <h3>Synopsis</h3> : \"\"}\n      <p>{movie.overview}</p>\n      {movie.genre_ids ? (\n        <div className=\"btn\" onClick={() => addStorage()}>\n          Ajouter aux coups de coeur\n        </div>\n      ) : (\n        <div\n          className=\"btn\"\n          onClick={() => {\n            deleteStorage();\n            window.location.reload();\n          }}\n        >\n          Supprimer de la liste\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC1B,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,IAAI,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;IAClC,OAAO,CAACD,EAAE,EAAED,EAAE,EAAED,EAAE,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;EAC/B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACW,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAC/C,QAAQV,KAAK,CAACW,SAAS,CAACD,CAAC,CAAC;QACxB,KAAK,EAAE;UACLD,UAAU,CAACI,IAAI,CAAC,QAAQ,CAAC;UACzB;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,WAAW,CAAC;UAC5B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,cAAc,CAAC;UAC/B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,OAAO,CAAC;UACxB;QACF,KAAK,KAAK;UACRJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,KAAK;UACRJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,IAAI;UACPJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,KAAK;UACRJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF,KAAK,GAAG;UACNJ,UAAU,CAACI,IAAI,CAAC,iBAAiB,CAAC;UAClC;QACF,KAAK,KAAK;UACRJ,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,KAAK;UACRJ,UAAU,CAACI,IAAI,CAAC,QAAQ,CAAC;UACzB;QACF,KAAK,EAAE;UACLJ,UAAU,CAACI,IAAI,CAAC,SAAS,CAAC;UAC1B;QACF;UACE;MACJ;IACF;IACA,OAAOJ,UAAU,CAACK,GAAG,CAAEC,KAAK,iBAAKjB,OAAA;MAAAkB,QAAA,EAAiBD;IAAK,GAAbA,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,MAAM,GACvCF,MAAM,CAACC,YAAY,CAACC,MAAM,CAACnB,KAAK,CAAC,GAAG,CAAC,GACrC,EAAE;IAEN,IAAI,CAACgB,UAAU,CAACI,QAAQ,CAAC1B,KAAK,CAAC2B,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;MAC7CN,UAAU,CAACT,IAAI,CAACb,KAAK,CAAC2B,EAAE,CAAC;MACzBJ,MAAM,CAACC,YAAY,CAACC,MAAM,GAAGH,UAAU;IACzC;EACF,CAAC;EAED,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIP,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,MAAM,CAACnB,KAAK,CAAC,GAAG,CAAC;IACtD,IAAIwB,OAAO,GAAGR,UAAU,CAACS,MAAM,CAAEJ,EAAE,IAAKA,EAAE,IAAI3B,KAAK,CAAC2B,EAAE,CAAC;IAEvDJ,MAAM,CAACC,YAAY,CAACC,MAAM,GAAGK,OAAO;EACtC,CAAC;EAED,oBACEhC,OAAA;IAAKkC,SAAS,EAAC,MAAM;IAAAhB,QAAA,gBACnBlB,OAAA;MACEmC,GAAG,EACDjC,KAAK,CAACkC,WAAW,GACb,sCAAsC,GAAGlC,KAAK,CAACkC,WAAW,GAC1D,kBACL;MACDC,GAAG,EAAE,WAAWnC,KAAK,CAACoC,KAAK;IAAG;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFtB,OAAA;MAAAkB,QAAA,EAAKhB,KAAK,CAACoC;IAAK;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrBpB,KAAK,CAACqC,YAAY,gBACjBvC,OAAA;MAAAkB,QAAA,GAAI,aAAW,EAACf,YAAY,CAACD,KAAK,CAACqC,YAAY,CAAC;IAAA;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACpD,IAAI,eACRtB,OAAA;MAAAkB,QAAA,GACGhB,KAAK,CAACsC,YAAY,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,MAAI,eAAAzC,OAAA;QAAAkB,QAAA,EAAM;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAELtB,OAAA;MAAAkB,QAAA,EACGhB,KAAK,CAACW,SAAS,GACZH,WAAW,CAAC,CAAC,GACbR,KAAK,CAACwC,MAAM,CAAC1B,GAAG,CAAEC,KAAK,iBAAKjB,OAAA;QAAAkB,QAAA,EAAiBD,KAAK,CAAC0B;MAAI,GAAlB1B,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EAEJpB,KAAK,CAAC0C,QAAQ,gBAAG5C,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG,EAAE,eACxCtB,OAAA;MAAAkB,QAAA,EAAIhB,KAAK,CAAC0C;IAAQ;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBpB,KAAK,CAACW,SAAS,gBACdb,OAAA;MAAKkC,SAAS,EAAC,KAAK;MAACW,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,CAAE;MAAAL,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENtB,OAAA;MACEkC,SAAS,EAAC,KAAK;MACfW,OAAO,EAAEA,CAAA,KAAM;QACbd,aAAa,CAAC,CAAC;QACfN,MAAM,CAACqB,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAE;MAAA7B,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC0B,EAAA,GAvII/C,IAAI;AAyIV,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}