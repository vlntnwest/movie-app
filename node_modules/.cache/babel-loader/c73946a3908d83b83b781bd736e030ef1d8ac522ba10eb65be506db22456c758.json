{"ast":null,"code":"var _jsxFileName = \"/Users/valentinwestermeyer/Library/Mobile Documents/com~apple~CloudDocs/Dev/Formation/TP/React/movie-app/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  movie\n}) => {\n  _s();\n  const [genreData, setGenreData] = useState([]);\n  const dateFormater = date => {\n    let newDate = new Date(date).toLocaleDateString(\"fr-FR\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n    return newDate;\n  };\n  const formattedDate = dateFormater(movie.release_date);\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/genre/movie/list?api_key=ed82f4c18f2964e75117c2dc65e2161d\").then(res => setGenreData(res.data.genres)).catch(error => console.error(\"Error fetching genre data:\", error));\n  }, []);\n  const getGenreNameById = id => {\n    const genre = genreData.find(genre => genre.id === id);\n    return genre ? genre.name : \"Unknown\";\n  };\n  const saveMovie = e => {\n    e.preventDefault();\n    let searchFavMovies = JSON.parse(localStorage.getItem(\"favMovies\") || \"[]\");\n    let savedMovies = {\n      id: movie.id\n    };\n    const isMovieAlreadySaved = searchFavMovies.some(savedMovie => savedMovie.id === savedMovies.id);\n    if (movie.id.length != 0 && !isMovieAlreadySaved) {\n      searchFavMovies.push(savedMovies);\n      localStorage.setItem(\"favMovies\", JSON.stringify(searchFavMovies));\n    }\n  };\n  const addStorage = () => {\n    let storedData = window.localStorage.movies ? window.localStorage.movies.split(\",\") : [];\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n  const deleteStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter(id => id != movie.id);\n    window.localStorage.movies = newData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster_path ? \"https://image.tmdb.org/t/p/original/\" + movie.poster_path : \"/img/poster.jpg\",\n      alt: \"Affiche \" + movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Sorti le : \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [movie.vote_average, \"/10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tag\",\n      children: movie.genre_ids.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: getGenreNameById(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), movie.overview ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Synopsis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), movie.genre_ids ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      onClick: () => addStorage(),\n      children: \"Ajouter aux coups de coeur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      onClick: () => {\n        deleteStorage();\n        window.location.reload();\n      },\n      children: \"Supprimer de la liste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"zj++CREQl7Di+JKg6rrfFPhrGqY=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Card","movie","_s","genreData","setGenreData","dateFormater","date","newDate","Date","toLocaleDateString","year","month","day","formattedDate","release_date","get","then","res","data","genres","catch","error","console","getGenreNameById","id","genre","find","name","saveMovie","e","preventDefault","searchFavMovies","JSON","parse","localStorage","getItem","savedMovies","isMovieAlreadySaved","some","savedMovie","length","push","setItem","stringify","addStorage","storedData","window","movies","split","includes","toString","deleteStorage","newData","filter","className","children","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","vote_average","genre_ids","map","overview","onClick","location","reload","_c","$RefreshReg$"],"sources":["/Users/valentinwestermeyer/Library/Mobile Documents/com~apple~CloudDocs/Dev/Formation/TP/React/movie-app/src/components/Card.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Card = ({ movie }) => {\n  const [genreData, setGenreData] = useState([]);\n\n  const dateFormater = (date) => {\n    let newDate = new Date(date).toLocaleDateString(\"fr-FR\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    return newDate;\n  };\n\n  const formattedDate = dateFormater(movie.release_date);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/genre/movie/list?api_key=ed82f4c18f2964e75117c2dc65e2161d\"\n      )\n      .then((res) => setGenreData(res.data.genres))\n      .catch((error) => console.error(\"Error fetching genre data:\", error));\n  }, []);\n\n  const getGenreNameById = (id) => {\n    const genre = genreData.find((genre) => genre.id === id);\n    return genre ? genre.name : \"Unknown\";\n  };\n\n  const saveMovie = (e) => {\n    e.preventDefault();\n    let searchFavMovies = JSON.parse(localStorage.getItem(\"favMovies\") || \"[]\");\n    let savedMovies = {\n      id: movie.id,\n    };\n\n    const isMovieAlreadySaved = searchFavMovies.some(\n      (savedMovie) => savedMovie.id === savedMovies.id\n    );\n\n    if (movie.id.length != 0 && !isMovieAlreadySaved) {\n      searchFavMovies.push(savedMovies);\n      localStorage.setItem(\"favMovies\", JSON.stringify(searchFavMovies));\n    }\n  };\n\n  const addStorage = () => {\n    let storedData = window.localStorage.movies\n      ? window.localStorage.movies.split(\",\")\n      : [];\n\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n\n  const deleteStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter((id) => id != movie.id);\n\n    window.localStorage.movies = newData;\n  };\n\n  return (\n    <li className=\"card\">\n      <img\n        src={\n          movie.poster_path\n            ? \"https://image.tmdb.org/t/p/original/\" + movie.poster_path\n            : \"/img/poster.jpg\"\n        }\n        alt={\"Affiche \" + movie.title}\n      />\n      <h2>{movie.title}</h2>\n      <h5>Sorti le : {formattedDate}</h5>\n      <h4>{movie.vote_average}/10</h4>\n      <ul className=\"tag\">\n        {movie.genre_ids.map((id) => (\n          <li key={id}>{getGenreNameById(id)}</li>\n        ))}\n      </ul>\n      {movie.overview ? <h3>Synopsis</h3> : \"\"}\n      <p>{movie.overview}</p>\n      {movie.genre_ids ? (\n        <div className=\"btn\" onClick={() => addStorage()}>\n          Ajouter aux coups de coeur\n        </div>\n      ) : (\n        <div\n          className=\"btn\"\n          onClick={() => {\n            deleteStorage();\n            window.location.reload();\n          }}\n        >\n          Supprimer de la liste\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,YAAY,GAAIC,IAAI,IAAK;IAC7B,IAAIC,OAAO,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,kBAAkB,CAAC,OAAO,EAAE;MACvDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;IACP,CAAC,CAAC;IACF,OAAOL,OAAO;EAChB,CAAC;EAED,MAAMM,aAAa,GAAGR,YAAY,CAACJ,KAAK,CAACa,YAAY,CAAC;EAEtDlB,SAAS,CAAC,MAAM;IACdF,KAAK,CACFqB,GAAG,CACF,wFACF,CAAC,CACAC,IAAI,CAAEC,GAAG,IAAKb,YAAY,CAACa,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIC,EAAE,IAAK;IAC/B,MAAMC,KAAK,GAAGtB,SAAS,CAACuB,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACD,EAAE,KAAKA,EAAE,CAAC;IACxD,OAAOC,KAAK,GAAGA,KAAK,CAACE,IAAI,GAAG,SAAS;EACvC,CAAC;EAED,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IAC3E,IAAIC,WAAW,GAAG;MAChBZ,EAAE,EAAEvB,KAAK,CAACuB;IACZ,CAAC;IAED,MAAMa,mBAAmB,GAAGN,eAAe,CAACO,IAAI,CAC7CC,UAAU,IAAKA,UAAU,CAACf,EAAE,KAAKY,WAAW,CAACZ,EAChD,CAAC;IAED,IAAIvB,KAAK,CAACuB,EAAE,CAACgB,MAAM,IAAI,CAAC,IAAI,CAACH,mBAAmB,EAAE;MAChDN,eAAe,CAACU,IAAI,CAACL,WAAW,CAAC;MACjCF,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACZ,eAAe,CAAC,CAAC;IACpE;EACF,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIC,UAAU,GAAGC,MAAM,CAACZ,YAAY,CAACa,MAAM,GACvCD,MAAM,CAACZ,YAAY,CAACa,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,GACrC,EAAE;IAEN,IAAI,CAACH,UAAU,CAACI,QAAQ,CAAChD,KAAK,CAACuB,EAAE,CAAC0B,QAAQ,CAAC,CAAC,CAAC,EAAE;MAC7CL,UAAU,CAACJ,IAAI,CAACxC,KAAK,CAACuB,EAAE,CAAC;MACzBsB,MAAM,CAACZ,YAAY,CAACa,MAAM,GAAGF,UAAU;IACzC;EACF,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,UAAU,GAAGC,MAAM,CAACZ,YAAY,CAACa,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IACtD,IAAII,OAAO,GAAGP,UAAU,CAACQ,MAAM,CAAE7B,EAAE,IAAKA,EAAE,IAAIvB,KAAK,CAACuB,EAAE,CAAC;IAEvDsB,MAAM,CAACZ,YAAY,CAACa,MAAM,GAAGK,OAAO;EACtC,CAAC;EAED,oBACErD,OAAA;IAAIuD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAClBxD,OAAA;MACEyD,GAAG,EACDvD,KAAK,CAACwD,WAAW,GACb,sCAAsC,GAAGxD,KAAK,CAACwD,WAAW,GAC1D,iBACL;MACDC,GAAG,EAAE,UAAU,GAAGzD,KAAK,CAAC0D;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFhE,OAAA;MAAAwD,QAAA,EAAKtD,KAAK,CAAC0D;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBhE,OAAA;MAAAwD,QAAA,GAAI,aAAW,EAAC1C,aAAa;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnChE,OAAA;MAAAwD,QAAA,GAAKtD,KAAK,CAAC+D,YAAY,EAAC,KAAG;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChE,OAAA;MAAIuD,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChBtD,KAAK,CAACgE,SAAS,CAACC,GAAG,CAAE1C,EAAE,iBACtBzB,OAAA;QAAAwD,QAAA,EAAchC,gBAAgB,CAACC,EAAE;MAAC,GAAzBA,EAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJ9D,KAAK,CAACkE,QAAQ,gBAAGpE,OAAA;MAAAwD,QAAA,EAAI;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG,EAAE,eACxChE,OAAA;MAAAwD,QAAA,EAAItD,KAAK,CAACkE;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtB9D,KAAK,CAACgE,SAAS,gBACdlE,OAAA;MAAKuD,SAAS,EAAC,KAAK;MAACc,OAAO,EAAEA,CAAA,KAAMxB,UAAU,CAAC,CAAE;MAAAW,QAAA,EAAC;IAElD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENhE,OAAA;MACEuD,SAAS,EAAC,KAAK;MACfc,OAAO,EAAEA,CAAA,KAAM;QACbjB,aAAa,CAAC,CAAC;QACfL,MAAM,CAACuB,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAE;MAAAf,QAAA,EACH;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAAC7D,EAAA,CApGIF,IAAI;AAAAuE,EAAA,GAAJvE,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}